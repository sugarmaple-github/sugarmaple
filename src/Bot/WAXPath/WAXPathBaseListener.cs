//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from WAXPath.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IWAXPathListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class WAXPathBaseListener : IWAXPathListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>apSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterApSlash([NotNull] WAXPathParser.ApSlashContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>apSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitApSlash([NotNull] WAXPathParser.ApSlashContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>apTwoSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterApTwoSlash([NotNull] WAXPathParser.ApTwoSlashContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>apTwoSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitApTwoSlash([NotNull] WAXPathParser.ApTwoSlashContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.filePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilePath([NotNull] WAXPathParser.FilePathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.filePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilePath([NotNull] WAXPathParser.FilePathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpText</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpText([NotNull] WAXPathParser.RpTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpText</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpText([NotNull] WAXPathParser.RpTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpChildren</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpChildren([NotNull] WAXPathParser.RpChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpChildren</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpChildren([NotNull] WAXPathParser.RpChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpAttName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpAttName([NotNull] WAXPathParser.RpAttNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpAttName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpAttName([NotNull] WAXPathParser.RpAttNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpSlash([NotNull] WAXPathParser.RpSlashContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpSlash([NotNull] WAXPathParser.RpSlashContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpParent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpParent([NotNull] WAXPathParser.RpParentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpParent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpParent([NotNull] WAXPathParser.RpParentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpTagName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpTagName([NotNull] WAXPathParser.RpTagNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpTagName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpTagName([NotNull] WAXPathParser.RpTagNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpCurrent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpCurrent([NotNull] WAXPathParser.RpCurrentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpCurrent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpCurrent([NotNull] WAXPathParser.RpCurrentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpFilter</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpFilter([NotNull] WAXPathParser.RpFilterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpFilter</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpFilter([NotNull] WAXPathParser.RpFilterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpBracket([NotNull] WAXPathParser.RpBracketContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpBracket([NotNull] WAXPathParser.RpBracketContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpComma</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpComma([NotNull] WAXPathParser.RpCommaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpComma</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpComma([NotNull] WAXPathParser.RpCommaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rpDoubleSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRpDoubleSlash([NotNull] WAXPathParser.RpDoubleSlashContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rpDoubleSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRpDoubleSlash([NotNull] WAXPathParser.RpDoubleSlashContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfRp</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfRp([NotNull] WAXPathParser.PfRpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfRp</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfRp([NotNull] WAXPathParser.PfRpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfBracket([NotNull] WAXPathParser.PfBracketContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfBracket([NotNull] WAXPathParser.PfBracketContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfIs</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfIs([NotNull] WAXPathParser.PfIsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfIs</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfIs([NotNull] WAXPathParser.PfIsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfNot</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfNot([NotNull] WAXPathParser.PfNotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfNot</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfNot([NotNull] WAXPathParser.PfNotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfEq</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfEq([NotNull] WAXPathParser.PfEqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfEq</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfEq([NotNull] WAXPathParser.PfEqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfAnd</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfAnd([NotNull] WAXPathParser.PfAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfAnd</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfAnd([NotNull] WAXPathParser.PfAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pfOr</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfOr([NotNull] WAXPathParser.PfOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pfOr</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfOr([NotNull] WAXPathParser.PfOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.tagName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTagName([NotNull] WAXPathParser.TagNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.tagName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTagName([NotNull] WAXPathParser.TagNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.attName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttName([NotNull] WAXPathParser.AttNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.attName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttName([NotNull] WAXPathParser.AttNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.fileName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileName([NotNull] WAXPathParser.FileNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.fileName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileName([NotNull] WAXPathParser.FileNameContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
