//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from WAXPath.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="WAXPathParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IWAXPathListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>apSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterApSlash([NotNull] WAXPathParser.ApSlashContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>apSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitApSlash([NotNull] WAXPathParser.ApSlashContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>apTwoSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterApTwoSlash([NotNull] WAXPathParser.ApTwoSlashContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>apTwoSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.ap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitApTwoSlash([NotNull] WAXPathParser.ApTwoSlashContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.filePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilePath([NotNull] WAXPathParser.FilePathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.filePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilePath([NotNull] WAXPathParser.FilePathContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpText</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpText([NotNull] WAXPathParser.RpTextContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpText</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpText([NotNull] WAXPathParser.RpTextContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpChildren</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpChildren([NotNull] WAXPathParser.RpChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpChildren</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpChildren([NotNull] WAXPathParser.RpChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpAttName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpAttName([NotNull] WAXPathParser.RpAttNameContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpAttName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpAttName([NotNull] WAXPathParser.RpAttNameContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpSlash([NotNull] WAXPathParser.RpSlashContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpSlash([NotNull] WAXPathParser.RpSlashContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpParent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpParent([NotNull] WAXPathParser.RpParentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpParent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpParent([NotNull] WAXPathParser.RpParentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpTagName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpTagName([NotNull] WAXPathParser.RpTagNameContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpTagName</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpTagName([NotNull] WAXPathParser.RpTagNameContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpCurrent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpCurrent([NotNull] WAXPathParser.RpCurrentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpCurrent</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpCurrent([NotNull] WAXPathParser.RpCurrentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpFilter</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpFilter([NotNull] WAXPathParser.RpFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpFilter</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpFilter([NotNull] WAXPathParser.RpFilterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpBracket([NotNull] WAXPathParser.RpBracketContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpBracket([NotNull] WAXPathParser.RpBracketContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpComma</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpComma([NotNull] WAXPathParser.RpCommaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpComma</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpComma([NotNull] WAXPathParser.RpCommaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rpDoubleSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRpDoubleSlash([NotNull] WAXPathParser.RpDoubleSlashContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rpDoubleSlash</c>
	/// labeled alternative in <see cref="WAXPathParser.rp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRpDoubleSlash([NotNull] WAXPathParser.RpDoubleSlashContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfRp</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfRp([NotNull] WAXPathParser.PfRpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfRp</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfRp([NotNull] WAXPathParser.PfRpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfBracket([NotNull] WAXPathParser.PfBracketContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfBracket</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfBracket([NotNull] WAXPathParser.PfBracketContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfIs</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfIs([NotNull] WAXPathParser.PfIsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfIs</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfIs([NotNull] WAXPathParser.PfIsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfNot</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfNot([NotNull] WAXPathParser.PfNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfNot</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfNot([NotNull] WAXPathParser.PfNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfEq</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfEq([NotNull] WAXPathParser.PfEqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfEq</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfEq([NotNull] WAXPathParser.PfEqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfAnd</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfAnd([NotNull] WAXPathParser.PfAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfAnd</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfAnd([NotNull] WAXPathParser.PfAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pfOr</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPfOr([NotNull] WAXPathParser.PfOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pfOr</c>
	/// labeled alternative in <see cref="WAXPathParser.pathFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPfOr([NotNull] WAXPathParser.PfOrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.tagName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTagName([NotNull] WAXPathParser.TagNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.tagName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTagName([NotNull] WAXPathParser.TagNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.attName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttName([NotNull] WAXPathParser.AttNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.attName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttName([NotNull] WAXPathParser.AttNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WAXPathParser.fileName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileName([NotNull] WAXPathParser.FileNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WAXPathParser.fileName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileName([NotNull] WAXPathParser.FileNameContext context);
}
